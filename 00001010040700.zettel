title: Authenticated session
tags: #authentication #configuration #manual #security #zettelstore
syntax: zmk
role: manual

If an user is authenticated, a ""token"" is created that must be sent with every request.
Otherwise the user will not be recognized by Zettelstore.

If the user was authenticated via the web interface, the token is stored in a [[""session cookie""|https://en.wikipedia.org/wiki/HTTP_cookie#Session_cookie]].
When the web browser is closed, theses cookies are not saved.
If you want web browser to store the cookie as long as lifetime of that token, the owner must set the ''persistent-cookie'' value of the [[startup configuration|00001004010000]].

If the web browser remains inactive for a period, the user will be automatically logged off.
The maximum length of this period is specified by the ''token-lifetime-html'' value of the startup configuration.
Every time a web page is rendered, a new token is created and stored inside the cookie.

If you remotely access your Zettelstore via HTTP (not via HTTPS, which allows encrypted communication), your must set the ''insecure-cookie'' value of the startup configuration to ''true''.
In most cases, such a scenario is not recommended, because user name and password will be transferred as plain text.
You could make use of such scenario if you know all parties that access the local network where you access the Zettelstore.

If the user was authenticated via the API, the token will be returned as the content of the response.
Typically, the lifetime of this token is more short term, e.g. 10 minutes.
It is specified by the ''token-timeout-api'' value of the startup configuration.
If you need more time, you can either re-authenticate the user or use an API call to refresh the token.